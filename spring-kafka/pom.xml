<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>kafka-examples</artifactId>
        <groupId>com.kafka.examples</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>spring-kafka</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <spring.boot.version>2.5.1</spring.boot.version>
        <kafka.clients.version>2.7.2</kafka.clients.version>
        <avro.version>1.11.3</avro.version>
        <confluent.version>6.1.6</confluent.version>
        <lombok.version>1.18.22</lombok.version>
        <schema.registry.url>http://localhost:8081</schema.registry.url>
    </properties>

    <repositories>
        <!-- other maven repositories the project -->
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <!-- other maven repositories the project -->
        <pluginRepository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Starter for building web, including RESTful, applications using Spring MVC. Uses Tomcat as the default embedded container -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- enable production ready features -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- When using Spring for Apache Kafka in a Spring Boot application,
        the Apache Kafka dependency versions are determined by Spring Bootâ€™s dependency management.
        If you wish to use a different version of kafka-clients or kafka-streams, such as 2.8.0,
        you need to override all of the associated dependencies.
        -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.clients.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
        </dependency>

        <!-- avro dependency needed for Avro Maven plugin -->
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>

        <!-- kafka message avro serializer -->
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${confluent.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${avro.version}</version>
                <configuration>
                    <stringType>String</stringType>
                </configuration>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/resources/</sourceDirectory>
                            <outputDirectory>${project.basedir}/target/generated-sources/avro</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-maven-plugin</artifactId>
                <version>${confluent.version}</version>

                <configuration>
                    <schemaRegistryUrls>
                        <param>${schema.registry.url}</param>
                    </schemaRegistryUrls>
                </configuration>

                <executions>

                    <!-- This goal is used to read schemas from the local file system and validate them locally, before registering them -->
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>validate</goal>
                        </goals>
                        <configuration>
                            <subjects>
                                <example.avro.Payment>src/main/resources/payment.avsc</example.avro.Payment>
                                <example.avro.Account>src/main/resources/account.avsc</example.avro.Account>
                            </subjects>
                            <schemaTypes>
                                <example.avro.Payment>AVRO</example.avro.Payment>
                                <example.avro.Account>AVRO</example.avro.Account>
                            </schemaTypes>
                        </configuration>
                    </execution>

                    <!-- This goal is used to read schemas from the local file system and test them for compatibility against the Schema Registry server(s) -->
                    <execution>
                        <id>test-compatibility</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>test-compatibility</goal>
                        </goals>
                        <configuration>
                            <subjects>
                                <example.avro.Payment>src/main/resources/payment.avsc</example.avro.Payment>
                                <example.avro.Account>src/main/resources/account.avsc</example.avro.Account>
                            </subjects>
                            <schemaTypes>
                                <example.avro.Payment>AVRO</example.avro.Payment>
                                <example.avro.Account>AVRO</example.avro.Account>
                            </schemaTypes>
                        </configuration>
                    </execution>

                    <!-- This goal is used to read schemas from the local file system and register them on the target Schema Registry server(s) -->
                    <execution>
                        <id>register</id>
                        <goals>
                            <goal>register</goal>
                        </goals>
                        <configuration>
                            <subjects>
                                <example.avro.Payment>src/main/resources/payment.avsc</example.avro.Payment>
                                <example.avro.Account>src/main/resources/account.avsc</example.avro.Account>
                            </subjects>
                            <schemaTypes>
                                <example.avro.Payment>AVRO</example.avro.Payment>
                                <example.avro.Account>AVRO</example.avro.Account>
                            </schemaTypes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>